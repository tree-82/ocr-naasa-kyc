# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev

pr:
 branches:
   include:
     - dev

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '80e7ed72-da4d-465d-a81d-55cc525bde15'
  imageRepository: 'devocr'
  containerRegistry: 'devwftcr.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'

pool:
  name: builders

stages:
- stage: BuildAndPush
  displayName: Build and Push the image
  jobs:
  - job: BuildAndPush
    displayName: Build and Push
    steps:
    - task: DownloadSecureFile@1
      name: downloadEnvFile
      inputs:
        secureFile: '.env.ocr'
    
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'docker-compose.yml'
        artifact: 'docker-compose'
        publishLocation: 'pipeline'
        
    - script: |
        echo "Moving file to build context"
        mv $(downloadEnvFile.secureFilePath) $(Build.SourcesDirectory)/.env
      displayName: 'Move file to build context'

    - task: Docker@2
      displayName: Build
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: 'Dockerfile'
        tags: '$(tag)'

    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(tag)'


- stage: DeployToServer
  displayName: Deploy
  jobs:
  - deployment: dockerDeployment
    displayName: Deployment to dev environment
    environment:
      name: dev
    pool:
      name: dev
      demands: Agent.Name -equals dev-2

    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'docker-compose'
                targetPath: '.' 
            - task: DockerCompose@0
              inputs:
                containerregistrytype: 'Azure Container Registry'
                azureSubscription: 'Microsoft Azure Sponsorship_WFT(1b2787c9-81b1-486c-9af0-a9c6befae46a)'
                azureContainerRegistry: '{"loginServer":"devwftcr.azurecr.io", "id" : "/subscriptions/1b2787c9-81b1-486c-9af0-a9c6befae46a/resourceGroups/dev/providers/Microsoft.ContainerRegistry/registries/devwftcr"}'
                dockerComposeFile: 'docker-compose.yml'
                dockerComposeFileArgs: 'tag = $(tag)'
                action: 'Run a Docker Compose command'
                dockerComposeCommand: 'up'
                arguments: '-d dev-ocr'
